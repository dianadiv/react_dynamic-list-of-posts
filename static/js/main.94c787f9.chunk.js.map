{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","utils/fetchClient.ts","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","handleClick","showSidebar","className","map","post","id","title","type","cn","onClick","Loader","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","json","client","NewCommentForm","handleAddComment","setError","useState","nameValue","setNameValue","emailValue","setEmailValue","textValue","setTextValue","loading","setLoading","hasNameError","setHasNameError","hasEmailError","setHasEmailError","hasTextError","setHasTextError","onSubmit","event","preventDefault","postId","name","email","catch","finally","handleSubmit","htmlFor","placeholder","value","onChange","newValue","target","PostDetails","showCommentForm","setVisibleFrom","comments","setComments","error","useEffect","ignore","result","length","comment","href","allComments","errorTitle","UserSelector","users","handleSelect","selectedUser","showDropdown","setShowDropdown","role","user","App","setPosts","setUsers","setSelectedUser","setShowSidebar","selectedPost","setSelectedPost","setShowCommentForm","currPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94c787f9.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Post } from '../types/Post';\n\ninterface Props{\n  posts: Post[] | null,\n  handleClick: (post: Post) => void,\n  showSidebar: Post | null,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts, handleClick, showSidebar,\n}) => {\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts?.map(post => (\n            <tr data-cy=\"Post\">\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={cn('button', {\n                    'is-link': showSidebar?.id === post.id,\n                    'is-light': showSidebar?.id !== post.id,\n                  })}\n                  onClick={() => handleClick(post)}\n                >\n                  {showSidebar?.id === post.id\n                    ? <p>Close</p>\n                    : <p>Open</p>}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { client } from '../utils/fetchClient';\nimport { Post } from '../types/Post';\nimport { Comment } from '../types/Comment';\n\ninterface Props{\n  post: Post | null,\n  handleAddComment: (comment: Comment) => void,\n  setError: (error: string) => void,\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  post, handleAddComment, setError,\n}) => {\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [textValue, setTextValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [hasNameError, setHasNameError] = useState(false);\n  const [hasEmailError, setHasEmailError] = useState(false);\n  const [hasTextError, setHasTextError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasNameError(!nameValue);\n    setHasEmailError(!emailValue);\n    setHasTextError(!textValue);\n\n    if (!nameValue || !emailValue || !textValue) {\n      return;\n    }\n\n    const data = {\n      postId: post ? post.id : 0,\n      name: nameValue,\n      email: emailValue,\n      body: textValue,\n    };\n\n    setLoading(true);\n\n    client.post<Comment>('/comments', data)\n      .then(response => {\n        setTextValue('');\n        handleAddComment(response);\n\n        return response;\n      })\n      .catch(() => setError('Can not add a comment'))\n      .finally(() => setLoading(false));\n  };\n\n  const handleChangeName = (newValue: string) => {\n    setNameValue(newValue);\n    setHasNameError(false);\n  };\n\n  const handleChangeEmail = (newValue: string) => {\n    setEmailValue(newValue);\n    setHasEmailError(false);\n  };\n\n  const handleChangeText = (newValue: string) => {\n    setTextValue(newValue);\n    setHasTextError(false);\n  };\n\n  const handleClear = () => {\n    setNameValue('');\n    setEmailValue('');\n    setTextValue('');\n    setHasNameError(false);\n    setHasEmailError(false);\n    setHasTextError(false);\n  };\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={event => handleSubmit(event)}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn('input', { 'is-danger': hasNameError })}\n            value={nameValue}\n            onChange={event => handleChangeName(event.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn('input', { 'is-danger': hasEmailError })}\n            value={emailValue}\n            onChange={event => handleChangeEmail(event.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn('textarea', { 'is-danger': hasTextError })}\n            value={textValue}\n            onChange={event => handleChangeText(event.target.value)}\n          />\n        </div>\n\n        {hasTextError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn(\n              'button is-link',\n              { 'is-loading': loading },\n            )}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={() => handleClear()}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\nimport { Comment } from '../types/Comment';\nimport { NewCommentForm } from './NewCommentForm';\n\ninterface Props{\n  post: Post | null,\n  showCommentForm: boolean,\n  setVisibleFrom: () => void,\n}\n\nexport const PostDetails: React.FC<Props> = ({\n  post, showCommentForm, setVisibleFrom,\n}) => {\n  const [comments, setComments] = useState<Comment[] | []>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const addComment = (comment: Comment) => {\n    setComments(allComments => [...allComments, comment]);\n  };\n\n  useEffect(() => {\n    if (!post) {\n      return undefined;\n    }\n\n    setError('');\n    let ignore = false;\n\n    setLoading(true);\n    client.get<Comment[]>(`/comments?postId=${post?.id}`)\n      .then(result => {\n        if (!ignore) {\n          setComments(result);\n        }\n      })\n      .catch(() => setError('Can not upload comments'))\n      .finally(() => setLoading(false));\n\n    return () => {\n      ignore = true;\n    };\n  }, [post]);\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {loading && <Loader />}\n\n          {error.length > 0 && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong!\n            </div>\n          )}\n\n          {(error.length === 0 && comments.length === 0 && !loading) && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {comments.length > 0 && !loading && error.length === 0 && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n              {comments.map(comment => (\n                <article\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                  key={comment.id}\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${comment.name}`} data-cy=\"CommentAuthor\">\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!loading && error.length === 0 && !showCommentForm && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setVisibleFrom()}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {showCommentForm && error.length === 0 && (\n          <NewCommentForm\n            post={post}\n            handleAddComment={addComment}\n            setError={(errorTitle) => setError(errorTitle)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import cn from 'classnames';\nimport React, { useState } from 'react';\nimport { User } from '../types/User';\n\ninterface Props{\n  users: User[],\n  handleSelect: (user: User) => void,\n  selectedUser: User | null,\n}\n\nexport const UserSelector: React.FC<Props> = ({\n  users, handleSelect, selectedUser,\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleClickOnUser = (activeUser: User) => {\n    handleSelect(activeUser);\n    setShowDropdown(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={cn('dropdown', { 'is-active': showDropdown })}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button active\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setShowDropdown(!showDropdown)}\n        >\n          {!selectedUser\n            ? (\n              <span>Choose a user</span>\n            ) : (\n              <span>{selectedUser.name}</span>\n            )}\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map((user : User) => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={cn('dropdown-item',\n                { 'is-active': selectedUser?.id === user.id })}\n              onClick={() => handleClickOnUser(user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\nimport { client } from './utils/fetchClient';\n\nexport const App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[] | []>([]);\n  const [users, setUsers] = useState<User [] | []>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [showCommentForm, setShowCommentForm] = useState(false);\n\n  const handleChooseUser = (currPost: Post) => {\n    if (currPost.id === selectedPost?.id) {\n      setSelectedPost(null);\n      setShowSidebar(false);\n    } else {\n      setSelectedPost(currPost);\n      setShowSidebar(true);\n    }\n\n    setShowCommentForm(false);\n  };\n\n  useEffect(() => {\n    if (!selectedUser) {\n      return undefined;\n    }\n\n    let ignore = false;\n\n    setLoading(true);\n    client.get<Post []>(`/posts?userId=${selectedUser?.id}`)\n      .then(result => {\n        if (!ignore) {\n          setPosts(result);\n        }\n      })\n      .catch(() => setError('Can not upload post'))\n      .finally(() => setLoading(false));\n\n    return () => {\n      ignore = true;\n    };\n  }, [selectedUser]);\n\n  useEffect(() => {\n    client.get<User []>('/users')\n      .then(setUsers);\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  handleSelect={(user) => {\n                    setSelectedUser(user);\n                    setShowSidebar(false);\n                    setSelectedPost(null);\n                  }}\n                  selectedUser={selectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {loading && <Loader />}\n\n                {error.length > 0 && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    Something went wrong!\n                  </div>\n                )}\n\n                {(selectedUser && posts.length === 0\n                  && error.length === 0 && !loading) && (\n                  <div\n                    className=\"notification is-warning\"\n                    data-cy=\"NoPostsYet\"\n                  >\n                    No posts yet\n                  </div>\n                )}\n\n                {posts.length > 0 && !loading && (\n                  <PostsList\n                    posts={posts}\n                    handleClick={handleChooseUser}\n                    showSidebar={selectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={cn(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': showSidebar },\n            )}\n          >\n            <div className=\"tile is-child box is-success \">\n              <PostDetails\n                post={selectedPost}\n                showCommentForm={showCommentForm}\n                setVisibleFrom={() => setShowCommentForm(true)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}